{
  "api/NanoByte.CodeGeneration.CSharpAttribute.html": {
    "href": "api/NanoByte.CodeGeneration.CSharpAttribute.html",
    "title": "Class CSharpAttribute | NanoByte Code Generation",
    "keywords": "Class CSharpAttribute Namespace NanoByte.CodeGeneration Assembly NanoByte.CodeGeneration.dll An attribute on a CSharpInterface, CSharpClass or CSharpProperty. public class CSharpAttribute Inheritance object CSharpAttribute Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CSharpAttribute(CSharpIdentifier) An attribute on a CSharpInterface, CSharpClass or CSharpProperty. public CSharpAttribute(CSharpIdentifier identifier) Parameters identifier CSharpIdentifier The type of the attribute. Properties Arguments Arguments for the attribute. public List<object> Arguments { get; } Property Value List<object> Identifier The type of the attribute. public CSharpIdentifier Identifier { get; } Property Value CSharpIdentifier NamedArguments Named Arguments for the attribute. public List<(string name, object value)> NamedArguments { get; } Property Value List<(string name, object value)>"
  },
  "api/NanoByte.CodeGeneration.CSharpClass.html": {
    "href": "api/NanoByte.CodeGeneration.CSharpClass.html",
    "title": "Class CSharpClass | NanoByte Code Generation",
    "keywords": "Class CSharpClass Namespace NanoByte.CodeGeneration Assembly NanoByte.CodeGeneration.dll Describes a C# class for which code can be generated. public class CSharpClass : CSharpInterface, ICSharpType Inheritance object CSharpType CSharpInterface CSharpClass Implements ICSharpType Inherited Members CSharpInterface.Interfaces CSharpInterface.Properties CSharpInterface.GetMemberDeclaration() CSharpType.Identifier CSharpType.Summary CSharpType.Attributes CSharpType.ToSyntax() CSharpType.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods CSharpTypeExtensions.WriteToDirectory(ICSharpType, string) CSharpTypeExtensions.WriteToFile(ICSharpType, string) Constructors CSharpClass(CSharpIdentifier) Describes a C# class for which code can be generated. public CSharpClass(CSharpIdentifier identifier) Parameters identifier CSharpIdentifier The fully qualified name of the class. Properties BaseClass The base class of this class; null if none. public CSharpConstructor? BaseClass { get; set; } Property Value CSharpConstructor Methods GetBaseTypes() Returns a list of Roslyn syntax for references to base types of this type. protected override IEnumerable<BaseTypeSyntax> GetBaseTypes() Returns IEnumerable<BaseTypeSyntax> GetConstruction() Returns a constructor for instantiating this class. public CSharpConstructor GetConstruction() Returns CSharpConstructor GetMemberDeclarations() Returns a list of Roslyn syntax for members of this type. protected override IEnumerable<MemberDeclarationSyntax> GetMemberDeclarations() Returns IEnumerable<MemberDeclarationSyntax> GetNamespaces() Returns a list of all namespaces referenced/used in this type. protected override ISet<string> GetNamespaces() Returns ISet<string> GetTypeDeclaration() Returns a Roslyn syntax for the type. protected override TypeDeclarationSyntax GetTypeDeclaration() Returns TypeDeclarationSyntax"
  },
  "api/NanoByte.CodeGeneration.CSharpConstructor.html": {
    "href": "api/NanoByte.CodeGeneration.CSharpConstructor.html",
    "title": "Class CSharpConstructor | NanoByte Code Generation",
    "keywords": "Class CSharpConstructor Namespace NanoByte.CodeGeneration Assembly NanoByte.CodeGeneration.dll A constructor for a CSharpClass. public class CSharpConstructor Inheritance object CSharpConstructor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CSharpConstructor(CSharpIdentifier) A constructor for a CSharpClass. public CSharpConstructor(CSharpIdentifier type) Parameters type CSharpIdentifier The fully qualified name of the class that the constructor instantiates. Properties Parameters The parameters for the constructor. public List<CSharpParameter> Parameters { get; } Property Value List<CSharpParameter> Type The fully qualified name of the class that the constructor instantiates. public CSharpIdentifier Type { get; } Property Value CSharpIdentifier Methods ToString() Returns the name of the class that the constructor instantiates. public override string ToString() Returns string"
  },
  "api/NanoByte.CodeGeneration.CSharpEnum.html": {
    "href": "api/NanoByte.CodeGeneration.CSharpEnum.html",
    "title": "Class CSharpEnum | NanoByte Code Generation",
    "keywords": "Class CSharpEnum Namespace NanoByte.CodeGeneration Assembly NanoByte.CodeGeneration.dll Describes a C# enum for which code can be generated. public class CSharpEnum : CSharpType, ICSharpType Inheritance object CSharpType CSharpEnum Implements ICSharpType Inherited Members CSharpType.Identifier CSharpType.Summary CSharpType.Attributes CSharpType.ToSyntax() CSharpType.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods CSharpTypeExtensions.WriteToDirectory(ICSharpType, string) CSharpTypeExtensions.WriteToFile(ICSharpType, string) Constructors CSharpEnum(CSharpIdentifier) Describes a C# enum for which code can be generated. public CSharpEnum(CSharpIdentifier identifier) Parameters identifier CSharpIdentifier The fully qualified name of the enum. Properties Values A list of possible values for the enum. public List<CSharpEnumValue> Values { get; } Property Value List<CSharpEnumValue> Methods GetMemberDeclaration() Returns a Roslyn syntax for the type. protected override MemberDeclarationSyntax GetMemberDeclaration() Returns MemberDeclarationSyntax GetNamespaces() Returns a list of all namespaces referenced/used in this type. protected override ISet<string> GetNamespaces() Returns ISet<string>"
  },
  "api/NanoByte.CodeGeneration.CSharpEnumValue.html": {
    "href": "api/NanoByte.CodeGeneration.CSharpEnumValue.html",
    "title": "Class CSharpEnumValue | NanoByte Code Generation",
    "keywords": "Class CSharpEnumValue Namespace NanoByte.CodeGeneration Assembly NanoByte.CodeGeneration.dll A possible value for a CSharpEnum. public class CSharpEnumValue Inheritance object CSharpEnumValue Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CSharpEnumValue(string) A possible value for a CSharpEnum. public CSharpEnumValue(string name) Parameters name string The name of the enum value. Properties Attributes Attributes to apply to the enum value. public List<CSharpAttribute> Attributes { get; } Property Value List<CSharpAttribute> Name The name of the enum value. public string Name { get; } Property Value string Summary A summary used for an XML documentation comment. public string? Summary { get; set; } Property Value string Methods ToString() Returns the name of the enum value. public override string ToString() Returns string"
  },
  "api/NanoByte.CodeGeneration.CSharpIdentifier.html": {
    "href": "api/NanoByte.CodeGeneration.CSharpIdentifier.html",
    "title": "Class CSharpIdentifier | NanoByte Code Generation",
    "keywords": "Class CSharpIdentifier Namespace NanoByte.CodeGeneration Assembly NanoByte.CodeGeneration.dll The fully qualified name of a type. public class CSharpIdentifier Inheritance object CSharpIdentifier Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CSharpIdentifier(string?, string, bool) Creates a new identifier. public CSharpIdentifier(string? ns, string name, bool nullable = false) Parameters ns string The namespace containing the type. name string The name of the type. nullable bool Indicates whether the type can have the value null. Properties Bool public static CSharpIdentifier Bool { get; } Property Value CSharpIdentifier Double public static CSharpIdentifier Double { get; } Property Value CSharpIdentifier Float public static CSharpIdentifier Float { get; } Property Value CSharpIdentifier Int public static CSharpIdentifier Int { get; } Property Value CSharpIdentifier Long public static CSharpIdentifier Long { get; } Property Value CSharpIdentifier Name The name of the type. public string Name { get; } Property Value string Namespace The namespace containing the type. public string? Namespace { get; } Property Value string Nullable Indicates whether the type can have the value null. public bool Nullable { get; } Property Value bool Object public static CSharpIdentifier Object { get; } Property Value CSharpIdentifier String public static CSharpIdentifier String { get; } Property Value CSharpIdentifier TypeArguments Generic type arguments for the type. public List<CSharpIdentifier> TypeArguments { get; } Property Value List<CSharpIdentifier> Uri public static CSharpIdentifier Uri { get; } Property Value CSharpIdentifier Methods DictionaryOf(CSharpIdentifier, CSharpIdentifier) public static CSharpIdentifier DictionaryOf(CSharpIdentifier keyType, CSharpIdentifier valueType) Parameters keyType CSharpIdentifier valueType CSharpIdentifier Returns CSharpIdentifier ListOf(CSharpIdentifier) public static CSharpIdentifier ListOf(CSharpIdentifier type) Parameters type CSharpIdentifier Returns CSharpIdentifier ToInterface() Returns a copy of the identifier with an I prepended to the Name. public CSharpIdentifier ToInterface() Returns CSharpIdentifier ToNullable() Returns a copy of the identifier with Nullable set to true. public CSharpIdentifier ToNullable() Returns CSharpIdentifier ToString() Returns the name of the type with potential type arguments. public override string ToString() Returns string"
  },
  "api/NanoByte.CodeGeneration.CSharpInterface.html": {
    "href": "api/NanoByte.CodeGeneration.CSharpInterface.html",
    "title": "Class CSharpInterface | NanoByte Code Generation",
    "keywords": "Class CSharpInterface Namespace NanoByte.CodeGeneration Assembly NanoByte.CodeGeneration.dll Describes a C# interface for which code can be generated. public class CSharpInterface : CSharpType, ICSharpType Inheritance object CSharpType CSharpInterface Implements ICSharpType Derived CSharpClass Inherited Members CSharpType.Identifier CSharpType.Summary CSharpType.Attributes CSharpType.ToSyntax() CSharpType.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods CSharpTypeExtensions.WriteToDirectory(ICSharpType, string) CSharpTypeExtensions.WriteToFile(ICSharpType, string) Constructors CSharpInterface(CSharpIdentifier) Describes a C# interface for which code can be generated. public CSharpInterface(CSharpIdentifier identifier) Parameters identifier CSharpIdentifier The fully qualified name of the interface. Properties Interfaces A list of interfaces this type implements. public List<CSharpIdentifier> Interfaces { get; } Property Value List<CSharpIdentifier> Properties A list of properties this type exposes. public List<CSharpProperty> Properties { get; } Property Value List<CSharpProperty> Methods GetBaseTypes() Returns a list of Roslyn syntax for references to base types of this type. protected virtual IEnumerable<BaseTypeSyntax> GetBaseTypes() Returns IEnumerable<BaseTypeSyntax> GetMemberDeclaration() Returns a Roslyn syntax for the type. protected override MemberDeclarationSyntax GetMemberDeclaration() Returns MemberDeclarationSyntax GetMemberDeclarations() Returns a list of Roslyn syntax for members of this type. protected virtual IEnumerable<MemberDeclarationSyntax> GetMemberDeclarations() Returns IEnumerable<MemberDeclarationSyntax> GetNamespaces() Returns a list of all namespaces referenced/used in this type. protected override ISet<string> GetNamespaces() Returns ISet<string> GetTypeDeclaration() Returns a Roslyn syntax for the type. protected virtual TypeDeclarationSyntax GetTypeDeclaration() Returns TypeDeclarationSyntax"
  },
  "api/NanoByte.CodeGeneration.CSharpParameter.html": {
    "href": "api/NanoByte.CodeGeneration.CSharpParameter.html",
    "title": "Class CSharpParameter | NanoByte Code Generation",
    "keywords": "Class CSharpParameter Namespace NanoByte.CodeGeneration Assembly NanoByte.CodeGeneration.dll A parameter for a CSharpConstructor. public class CSharpParameter Inheritance object CSharpParameter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CSharpParameter(CSharpIdentifier, string) A parameter for a CSharpConstructor. public CSharpParameter(CSharpIdentifier type, string name) Parameters type CSharpIdentifier The type of the parameter. name string The name of the parameter. Properties Name The name of the parameter. public string Name { get; } Property Value string Type The type of the parameter. public CSharpIdentifier Type { get; } Property Value CSharpIdentifier Value The value to set for this parameter when invoking it. Passes through a argument of the same name when not set. public object? Value { get; set; } Property Value object Methods ToString() Returns the type, name and value of the parameter. public override string ToString() Returns string"
  },
  "api/NanoByte.CodeGeneration.CSharpProperty.html": {
    "href": "api/NanoByte.CodeGeneration.CSharpProperty.html",
    "title": "Class CSharpProperty | NanoByte Code Generation",
    "keywords": "Class CSharpProperty Namespace NanoByte.CodeGeneration Assembly NanoByte.CodeGeneration.dll A property on a CSharpInterface or CSharpClass. public class CSharpProperty Inheritance object CSharpProperty Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CSharpProperty(CSharpIdentifier, string) A property on a CSharpInterface or CSharpClass. public CSharpProperty(CSharpIdentifier type, string name) Parameters type CSharpIdentifier The type of the property. name string The name of the property. Properties Attributes Attributes to apply to the property. public List<CSharpAttribute> Attributes { get; } Property Value List<CSharpAttribute> GetterExpression An expression body for the property's getter. public CSharpConstructor? GetterExpression { get; set; } Property Value CSharpConstructor HasSetter Indicates whether the property has a setter. public bool HasSetter { get; set; } Property Value bool Initializer The property's initializer (sets default value). public CSharpConstructor? Initializer { get; set; } Property Value CSharpConstructor Name The name of the property. public string Name { get; } Property Value string Summary A summary used for an XML documentation comment. public string? Summary { get; set; } Property Value string Type The type of the property. public CSharpIdentifier Type { get; } Property Value CSharpIdentifier Methods ToString() Returns the name of the property. public override string ToString() Returns string"
  },
  "api/NanoByte.CodeGeneration.CSharpType.html": {
    "href": "api/NanoByte.CodeGeneration.CSharpType.html",
    "title": "Class CSharpType | NanoByte Code Generation",
    "keywords": "Class CSharpType Namespace NanoByte.CodeGeneration Assembly NanoByte.CodeGeneration.dll Describes a C# type for which code can be generated. public abstract class CSharpType : ICSharpType Inheritance object CSharpType Implements ICSharpType Derived CSharpEnum CSharpInterface Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods CSharpTypeExtensions.WriteToDirectory(ICSharpType, string) CSharpTypeExtensions.WriteToFile(ICSharpType, string) Constructors CSharpType(CSharpIdentifier) Describes a C# type for which code can be generated. protected CSharpType(CSharpIdentifier identifier) Parameters identifier CSharpIdentifier The fully qualified name of the type. Properties Attributes Attributes to apply to the type. public List<CSharpAttribute> Attributes { get; } Property Value List<CSharpAttribute> Identifier The fully qualified name of the type. public CSharpIdentifier Identifier { get; } Property Value CSharpIdentifier Summary A summary used for an XML documentation comment. public string? Summary { get; set; } Property Value string Methods GetMemberDeclaration() Returns a Roslyn syntax for the type. protected abstract MemberDeclarationSyntax GetMemberDeclaration() Returns MemberDeclarationSyntax GetNamespaces() Returns a list of all namespaces referenced/used in this type. protected virtual ISet<string> GetNamespaces() Returns ISet<string> ToString() Returns the name of the type. public override string ToString() Returns string ToSyntax() Returns a Roslyn syntax for a file containing the type. public CompilationUnitSyntax ToSyntax() Returns CompilationUnitSyntax"
  },
  "api/NanoByte.CodeGeneration.CSharpTypeExtensions.html": {
    "href": "api/NanoByte.CodeGeneration.CSharpTypeExtensions.html",
    "title": "Class CSharpTypeExtensions | NanoByte Code Generation",
    "keywords": "Class CSharpTypeExtensions Namespace NanoByte.CodeGeneration Assembly NanoByte.CodeGeneration.dll Extension methods for ICSharpType. public static class CSharpTypeExtensions Inheritance object CSharpTypeExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods WriteToDirectory(ICSharpType, string) Writes C# code for the type to a file in the directory at path. public static void WriteToDirectory(this ICSharpType type, string path) Parameters type ICSharpType path string WriteToFile(ICSharpType, string) Writes C# code for the type to a file at path. public static void WriteToFile(this ICSharpType type, string path) Parameters type ICSharpType path string"
  },
  "api/NanoByte.CodeGeneration.ICSharpType.html": {
    "href": "api/NanoByte.CodeGeneration.ICSharpType.html",
    "title": "Interface ICSharpType | NanoByte Code Generation",
    "keywords": "Interface ICSharpType Namespace NanoByte.CodeGeneration Assembly NanoByte.CodeGeneration.dll Describes a C# type for which code can be generated. public interface ICSharpType Extension Methods CSharpTypeExtensions.WriteToDirectory(ICSharpType, string) CSharpTypeExtensions.WriteToFile(ICSharpType, string) Properties Attributes Attributes to apply to the type. List<CSharpAttribute> Attributes { get; } Property Value List<CSharpAttribute> Identifier The fully qualified name of the type. CSharpIdentifier Identifier { get; } Property Value CSharpIdentifier Summary A summary used for an XML documentation comment. string? Summary { get; set; } Property Value string Methods ToSyntax() Returns a Roslyn syntax for a file containing the type. CompilationUnitSyntax ToSyntax() Returns CompilationUnitSyntax"
  },
  "api/NanoByte.CodeGeneration.ThisReference.html": {
    "href": "api/NanoByte.CodeGeneration.ThisReference.html",
    "title": "Class ThisReference | NanoByte Code Generation",
    "keywords": "Class ThisReference Namespace NanoByte.CodeGeneration Assembly NanoByte.CodeGeneration.dll \"Magic\" value for Value indicating that the \"this\" keyword should be inserted. public class ThisReference Inheritance object ThisReference Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Methods ToString() public override string ToString() Returns string"
  },
  "api/NanoByte.CodeGeneration.html": {
    "href": "api/NanoByte.CodeGeneration.html",
    "title": "Namespace NanoByte.CodeGeneration | NanoByte Code Generation",
    "keywords": "Namespace NanoByte.CodeGeneration Thin wrapper around Roslyn API to simplify generating C# code. Classes CSharpAttribute An attribute on a CSharpInterface, CSharpClass or CSharpProperty. CSharpClass Describes a C# class for which code can be generated. CSharpConstructor A constructor for a CSharpClass. CSharpEnum Describes a C# enum for which code can be generated. CSharpEnumValue A possible value for a CSharpEnum. CSharpIdentifier The fully qualified name of a type. CSharpInterface Describes a C# interface for which code can be generated. CSharpParameter A parameter for a CSharpConstructor. CSharpProperty A property on a CSharpInterface or CSharpClass. CSharpType Describes a C# type for which code can be generated. CSharpTypeExtensions Extension methods for ICSharpType. ThisReference \"Magic\" value for Value indicating that the \"this\" keyword should be inserted. Interfaces ICSharpType Describes a C# type for which code can be generated."
  },
  "index.html": {
    "href": "index.html",
    "title": "Home | NanoByte Code Generation",
    "keywords": "NanoByte Code Generation A thin wrapper around the Roslyn API to simplify generating C# code. This can be used to implement things like code generators for Swagger/OpenAPI Spec, ORMs, etc. using a type-safe interface rather than simple string templating. While you can use the Rosyln API directly, its immutable and thread-safe design can make using it somewhat verbose and cumbersome. This library provides a simpler (but also less flexible) wrapper. Usage Add a reference to the NanoByte.CodeGeneration NuGet package to your project. It is available for .NET Standard 2.0+. You can then generate a class like this: var myClass = new CSharpClass(new CSharpIdentifier(\"MyNamespace\", \"MyClass\")) { Description = \"My class\", Properties = { new CSharpProperty(CSharpIdentifier.String, \"MyProperty\") { Description = \"My property\", HasSetter = true } } }; myClass.WriteToFile(\"MyClass.cs\"); Take a look at the documentation for CSharpClass and CSharpInterface to discover more features."
  }
}